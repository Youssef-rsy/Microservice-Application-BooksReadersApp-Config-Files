#server.port=${PORT:8880}
zuul.routes.readers.service-id=readerService
zuul.routes.readers.path=/readers/**
zuul.routes.readers.url=https://readersservice.herokuapp.com/

zuul.routes.books.service-id=bookService
zuul.routes.books.path=/books/**
zuul.routes.books.url=https://booksservice.herokuapp.com/

eureka.client.serviceUrl.defaultZone= https://serviceregistry.herokuapp.com/eureka/

#hystrix.command.default.execution.timeout.enabled= false

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds= 100000


ribbon.ReadTimeout = 10000
ribbon.ConnectTimeout = 6000
ribbon.MaxAutoRetries = 0
ribbon.MaxAutoRetriesNextServer = 1
ribbon.NFLoadBalancerRuleClassName = com.netflix.loadbalancer.WeightedResponseTimeRule
#server.port=8880

#########################################################################################################################################
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
spring.datasource.url= jdbc:postgresql://ec2-54-83-9-36.compute-1.amazonaws.com:5432/da65ld9u7858s?sslmode=require
spring.datasource.username=hbtcaohsijpsjc
spring.datasource.password=e7f59dde831cb44e9f90951a26afcee05726fcde45b768bf1651f2181eb58606


spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

#########################################################################################################################################
proxyService.security.secret = JzdWIiOiJ+youssef+rossamy+Spring+Security+jwt+secret+key
proxyService.security.expirationTime = 4348_000_000
proxyService.security.token.prefix = Bearer
proxyService.security.token.header = Authorization
